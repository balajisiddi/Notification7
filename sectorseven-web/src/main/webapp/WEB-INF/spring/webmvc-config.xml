<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd     
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd       
            http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
            http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
            http://www.springframework.org/schema/security  http://www.springframework.org/schema/security/spring-security.xsd">


	<!-- The controllers are auto detected POJOs labeled with the @Controller annotation. -->
		
	<context:component-scan	base-package="com.sectorseven.web" use-default-filters="false">
		<context:include-filter expression="org.springframework.stereotype.Controller" type="annotation" />
		<context:include-filter	expression="org.springframework.web.bind.annotation.ControllerAdvice" type="annotation" />
		<context:include-filter	expression="org.springframework.context.annotation.Configuration" type="annotation" />
	</context:component-scan>

	<tx:annotation-driven transaction-manager="hibernateTransactionManager" />
	
	<mvc:annotation-driven>
		<mvc:message-converters>
			<bean id="byteArrayMessageConverter"
				class="org.springframework.http.converter.ByteArrayHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<bean class="org.springframework.http.MediaType">
							<constructor-arg value="application" />
							<constructor-arg value="pdf" />
						</bean>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources -->
	<mvc:resources location="/resources/, classpath:/META-INF/web-resources/" mapping="/resources/**" />
	<mvc:resources location="/, classpath:/META-INF/web-resources/"	mapping="/admin/resources/**" />
	<mvc:resources location="/, classpath:/META-INF/web-resources/"	mapping="/pub/resources/**" />
	<mvc:resources location="/, classpath:/META-INF/web-resources/"	mapping="/data/resources/**" />
	
	<!-- Allows for mapping the DispatcherServlet to "/" by forwarding static 
		resource requests to the container's default Servlet -->
	<mvc:default-servlet-handler />
	
	<!-- Register "global" interceptor beans to apply to all registered HandlerMappings -->
	<mvc:interceptors>
		<bean class="org.springframework.web.servlet.theme.ThemeChangeInterceptor" >
		    <property name="paramName" value="theme" />
		</bean>
		<bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor"	p:paramName="lang" />
	</mvc:interceptors>
	
	<!-- Selects a static view for rendering without the need for an explicit 
		controller -->
    <!-- <mvc:view-controller path="/" view-name="login" /> -->
    <mvc:view-controller path="/login" view-name="login" />
    <mvc:view-controller path="/forgot" view-name="forgot" />
    <mvc:view-controller path="/school-login" view-name="schoolLoginPage" />
     <mvc:view-controller path="/student-login" view-name="studentLoginPage" />
    <mvc:view-controller path="/uncaughtException" />
	<mvc:view-controller path="/resourceNotFound" />
	<mvc:view-controller path="/dataAccessFailure" />
	<security:global-method-security secured-annotations="enabled" />
	
	<!-- Resolves localized messages*.properties and application.properties 
		files in the application to allow for internationalization. The messages*.properties 
		files translate Roo generated messages which are part of the admin interface, 
		the application.properties resource bundle localizes all application specific 
		messages such as entity names and menu items. -->
	<bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
		id="messageSource" p:basenames="WEB-INF/i18n/messages,WEB-INF/i18n/application"	p:fallbackToSystemLocale="false" />
	
	<!-- Store preferred theme configuration in a cookie -->
	<bean class="org.springframework.web.servlet.theme.CookieThemeResolver"	id="themeResolver" p:cookieName="theme" p:defaultThemeName="default" />


	<!-- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions. -->
	<bean	class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver"	p:defaultErrorView="uncaughtException">
		<property name="exceptionMappings">
			<props>
				<prop key=".DataAccessException">dataAccessFailure</prop>
				<prop key=".NoSuchRequestHandlingMethodException">resourceNotFound</prop>
				<prop key=".TypeMismatchException">resourceNotFound</prop>
				<prop key=".MissingServletRequestParameterException">resourceNotFound</prop>
			</props>
		</property>
	</bean>

<!-- Enable this for integration of file upload functionality -->
	<bean class="org.springframework.web.multipart.commons.CommonsMultipartResolver" id="multipartResolver" />
	
	<bean class="org.springframework.web.servlet.view.UrlBasedViewResolver" id="tilesViewResolver">
		<property name="viewClass"	value="org.springframework.web.servlet.view.tiles2.TilesView" />
	</bean>
	
	<bean class="org.springframework.web.servlet.view.tiles2.TilesConfigurer" id="tilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/layouts/layouts.xml</value>
				<!-- Scan views directory for Tiles configurations -->
				<value>/WEB-INF/views/**/views.xml</value>
			</list>
		</property>
	</bean>
	
	<task:annotation-driven/>
	<!--  if you have any schedulars write here.. -->
</beans>